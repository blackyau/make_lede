name: Build OpenWrt

on:
  push:
    branches:
      - master
#     paths:
#       - '.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  COMMIT_FILES: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master
    
    - name: Initialization environment
      run: |
        mkdir -p openwrt/bin/targets/ramips/mt7621/packages
        echo "11" > openwrt/bin/targets/ramips/mt7621/packages/base-files_199-r2314-c5668419_mipsel_24kc.ipk
        echo "adasd" > openwrt/bin/targets/ramips/mt7621/openwrt-ramips-mt7621-d-team_newifi-d2-initramfs-kernel.bin
        echo "adasd" > openwrt/bin/targets/ramips/mt7621/openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin
    
# 在 bin 目录中初始化 git
    - name: Commit files
      id: commit
      if: env.COMMIT_FILES == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"
        git init
        git branch file
        git checkout file
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "deployed by GitHub Action" -a

# 生成 tag
    - name: Generate tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-env name=RELEASE_TAG::$(date +"%Y.%m.%d-%H.%M")"
        echo "🚀 Auto build" >> release.txt
        echo "https://cdn.jsdelivr.net/gh/${{ github.repository }}@${{ env.RELEASE_TAG }}/" > /tmp/jsdelivr_url
        echo "::set-env name=JSDELIVR_URL::_$(cat /tmp/jsdelivr_url)"
        echo "🔗 [jsdelivr CDN Download](${{ env.JSDELIVR_URL }})" >> release.txt
        echo "::set-output name=status::success"

# 将文件 push 到 file 分支
    - name: Push file
      id: push_file
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.TOKEN }}
        branch: 'file'
        force: true
        directory: ${{ env.FIRMWARE }}

# 将 bin 目录上传至 release
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
